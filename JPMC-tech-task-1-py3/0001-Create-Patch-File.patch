From a3ab00b2ede65a8ede901d143798c1bf4034c786 Mon Sep 17 00:00:00 2001
From: Parth Mehta <parthmehtaprog@gmail.com>
Date: Mon, 18 May 2020 22:45:21 -0700
Subject: [PATCH] Create Patch File

---
 0001-Update-README-setupv6.patch | 25 +++++++++++++++++++++++++
 client3.py                       |  9 +++++++--
 client_test.py                   | 19 +++++++++++++++++--
 3 files changed, 49 insertions(+), 4 deletions(-)
 create mode 100644 0001-Update-README-setupv6.patch

diff --git a/0001-Update-README-setupv6.patch b/0001-Update-README-setupv6.patch
new file mode 100644
index 0000000..925d492
--- /dev/null
+++ b/0001-Update-README-setupv6.patch
@@ -0,0 +1,25 @@
+From 36143294b216b7210e2ee5948c78725503a5b7ca Mon Sep 17 00:00:00 2001
+From: jbf-insidesherpa <54832297+jbf-insidesherpa@users.noreply.github.com>
+Date: Mon, 25 Nov 2019 09:24:48 +0800
+Subject: [PATCH] Update README (setupv6)
+
+---
+ README.markdown | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/README.markdown b/README.markdown
+index 3390f3c..33da80c 100644
+--- a/README.markdown
++++ b/README.markdown
+@@ -32,7 +32,7 @@
+ 
+ <h2 id="installation" >Set up / Installation</h2>
+ 
+-<p>In order to get the server and client application code working on your machine, <a href="https://insidesherpa.s3.amazonaws.com/vinternships/companyassets/Sj7temL583QAYpHXD/setup_devenv_m1_v5a.pdf">follow the setup here</a></p>
++<p>In order to get the server and client application code working on your machine, <a href="https://insidesherpa.s3.amazonaws.com/vinternships/companyassets/Sj7temL583QAYpHXD/setup_devenv_m1_v6.pdf">follow the setup here</a></p>
+ <p><b>Note:</b>This is the Python 3 version of the JPM 1 exercise. The Python 2.7 version is in <a href="https://github.com/insidesherpa/JPMC-tech-task-1">this other repo</a></p>
+ 
+ <h2>How to Run</h2>
+-- 
+2.23.0.windows.1
+
diff --git a/client3.py b/client3.py
index f1771c3..9769393 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,17 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price) / 2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if (price_a == 0 or price_b == 0):
+		return 
+	else:
+		return price_a / price_b
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +55,10 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock] = price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
 		print ("Ratio %s" % getRatio(price, price))
diff --git a/client_test.py b/client_test.py
index af2bf26..4f4043f 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote["stock"],quote["top_bid"]["price"],quote["top_ask"]["price"],(quote["top_bid"]["price"]+quote["top_ask"]["price"])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +17,22 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote["stock"],quote["top_bid"]["price"],quote["top_ask"]["price"],(quote["top_bid"]["price"]+quote["top_ask"]["price"])/2))
 
   """ ------------ Add more unit tests ------------ """
+  def test_getDataPoint_calculatePriceAskIsEqualToBid(self):
+    quotes = [
+      {'top_ask': {'price': 120, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote["stock"],quote["top_bid"]["price"],quote["top_ask"]["price"],(quote["top_bid"]["price"]+quote["top_ask"]["price"])/2))
+
+  def test_getRatio_checkIfPrice_aORPrice_bIsEqualToZero(self):
+    self.assertEqual(getRatio(1, 0), None)    # Cause I've return None in Client3.py
+    self.assertEqual(getRatio(0, 1), None)
+    self.assertEqual(getRatio(0, 0), None)
 
 
 
-- 
2.23.0.windows.1

